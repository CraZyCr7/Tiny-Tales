{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\Desktop\\\\TinyTales\\\\TinyProject\\\\tiny-project\\\\src\\\\SubmitButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport './SubmitButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmitButton = () => {\n  _s();\n  const [clicked, setClicked] = useState(false);\n  const [content, setContent] = useState(\"\");\n  const [wordCount, setWordCount] = useState([]);\n  const handleClick = () => {\n    setClicked(true);\n    fetch(\"https://www.terriblytinytales.com/test.txt\").then(response => response.text()).then(data => {\n      setContent(data);\n      const words = data.toLowerCase().match(/\\b\\S+\\b/g);\n      console.log(words);\n      const wordCountObj = {};\n      words.forEach(word => {\n        wordCountObj[word] = (wordCountObj[word] || 0) + 1;\n      });\n      console.log(wordCountObj);\n      const wordCountArr = Object.keys(wordCountObj).map(key => ({\n        word: key,\n        count: wordCountObj[key]\n      }));\n      wordCountArr.sort((a, b) => b.count - a.count);\n      const top20Words = wordCountArr.slice(0, 20);\n      setWordCount(top20Words);\n    }).catch(error => console.log(error));\n    console.log(wordCount);\n  };\n  return clicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: wordCount,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: \"Submit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitButton, \"CJv+8puuEGIV0os4sYB9ncnl1Q0=\");\n_c = SubmitButton;\nexport default SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","jsxDEV","_jsxDEV","SubmitButton","_s","clicked","setClicked","content","setContent","wordCount","setWordCount","handleClick","fetch","then","response","text","data","words","toLowerCase","match","console","log","wordCountObj","forEach","word","wordCountArr","Object","keys","map","key","count","sort","a","b","top20Words","slice","catch","error","style","width","height","children","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","fill","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ayush/Desktop/TinyTales/TinyProject/tiny-project/src/SubmitButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\nimport './SubmitButton.css'\r\n\r\nconst SubmitButton = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const [wordCount, setWordCount] = useState([]);\r\n\r\n  const handleClick = () => {\r\n    setClicked(true);\r\n    fetch(\"https://www.terriblytinytales.com/test.txt\")\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        setContent(data);\r\n        const words = data.toLowerCase().match(/\\b\\S+\\b/g);\r\n        console.log(words);\r\n        const wordCountObj = {};\r\n        words.forEach((word) => {\r\n          wordCountObj[word] = (wordCountObj[word] || 0) + 1;\r\n        });\r\n        console.log(wordCountObj);\r\n        const wordCountArr = Object.keys(wordCountObj).map((key) => ({\r\n          word: key,\r\n          count: wordCountObj[key],\r\n        }));\r\n        wordCountArr.sort((a, b) => b.count - a.count);\r\n        const top20Words = wordCountArr.slice(0, 20);\r\n        setWordCount(top20Words);\r\n      })\r\n      .catch((error) => console.log(error));\r\n      console.log(wordCount)\r\n  };\r\n\r\n  return clicked ? (\r\n    <div style={{ width: '100%', height: '400px' }}>\r\n      <BarChart data={wordCount}>\r\n        <XAxis dataKey=\"word\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n    </div>\r\n  ) : (\r\n    <button onClick={handleClick}>Submit</button>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}