{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\Desktop\\\\TinyTales\\\\TinyProject\\\\tiny-project\\\\src\\\\SubmitButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport \"./SubmitButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubmitButton = () => {\n  _s();\n  const [clicked, setClicked] = useState(false);\n  const [, setContent] = useState(\"\");\n  const [wordCount, setWordCount] = useState([]);\n  const handleClick = () => {\n    setClicked(true);\n    fetch(\"https://www.terriblytinytales.com/test.txt\").then(response => response.text()).then(data => {\n      setContent(data);\n      const words = data.toLowerCase().match(/\\b\\S+\\b/g);\n      const wordCountObj = {};\n      words.forEach(word => {\n        wordCountObj[word] = (wordCountObj[word] || 0) + 1;\n      });\n      const wordCountArr = Object.keys(wordCountObj).map(key => ({\n        word: key,\n        count: wordCountObj[key]\n      })).sort((a, b) => b.count - a.count).slice(0, 20);\n      setWordCount(wordCountArr);\n    }).catch(error => console.log(error));\n  };\n  const handleExport = () => {\n    const csvContent = \"data:text/csv;charset=utf-8,\" + wordCount.map(row => `${row.word},${row.count}`).join(\"\\n\");\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"histogram-data.csv\");\n    document.body.appendChild(link);\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: clicked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 500,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: wordCount,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"count\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExport,\n          children: \"Export Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitButton, \"SSSh5Sd698V2l73F1gAvL6gNgbE=\");\n_c = SubmitButton;\nexport default SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","SubmitButton","_s","clicked","setClicked","setContent","wordCount","setWordCount","handleClick","fetch","then","response","text","data","words","toLowerCase","match","wordCountObj","forEach","word","wordCountArr","Object","keys","map","key","count","sort","a","b","slice","catch","error","console","log","handleExport","csvContent","row","join","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","className","children","width","height","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","fill","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ayush/Desktop/TinyTales/TinyProject/tiny-project/src/SubmitButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"./SubmitButton.css\";\r\n\r\nconst SubmitButton = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n  const [, setContent] = useState(\"\");\r\n  const [wordCount, setWordCount] = useState([]);\r\n\r\n  const handleClick = () => {\r\n    setClicked(true);\r\n    fetch(\"https://www.terriblytinytales.com/test.txt\")\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        setContent(data);\r\n        const words = data.toLowerCase().match(/\\b\\S+\\b/g);\r\n        const wordCountObj = {};\r\n        words.forEach((word) => {\r\n          wordCountObj[word] = (wordCountObj[word] || 0) + 1;\r\n        });\r\n        const wordCountArr = Object.keys(wordCountObj)\r\n          .map((key) => ({ word: key, count: wordCountObj[key] }))\r\n          .sort((a, b) => b.count - a.count)\r\n          .slice(0, 20);\r\n        setWordCount(wordCountArr);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleExport = () => {\r\n    const csvContent =\r\n      \"data:text/csv;charset=utf-8,\" +\r\n      wordCount.map((row) => `${row.word},${row.count}`).join(\"\\n\");\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"histogram-data.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {clicked ? (\r\n        <>\r\n          <div className=\"chart\">\r\n            <ResponsiveContainer width=\"100%\" height={500}>\r\n              <BarChart data={wordCount}>\r\n                <XAxis dataKey=\"word\" />\r\n                <YAxis />\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <Tooltip />\r\n                <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n          <div className=\"export\">\r\n            <button onClick={handleExport}>Export Data</button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"submit\">\r\n          <button onClick={handleClick}>Submit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}