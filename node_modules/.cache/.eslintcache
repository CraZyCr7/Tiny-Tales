[{"C:\\Users\\Ayush\\Desktop\\TinyTales\\TinyProject\\tiny-project\\src\\index.js":"1","C:\\Users\\Ayush\\Desktop\\TinyTales\\TinyProject\\tiny-project\\src\\App.js":"2","C:\\Users\\Ayush\\Desktop\\TinyTales\\TinyProject\\tiny-project\\src\\reportWebVitals.js":"3","C:\\Users\\Ayush\\Desktop\\TinyTales\\TinyProject\\tiny-project\\src\\SubmitButton.js":"4"},{"size":535,"mtime":1683551635046,"results":"5","hashOfConfig":"6"},{"size":310,"mtime":1683831842678,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1683551635148,"results":"8","hashOfConfig":"6"},{"size":2340,"mtime":1683908995948,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1m1q4pb",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\Ayush\\Desktop\\TinyTales\\TinyProject\\tiny-project\\src\\index.js",[],[],[],"C:\\Users\\Ayush\\Desktop\\TinyTales\\TinyProject\\tiny-project\\src\\App.js",[],[],"C:\\Users\\Ayush\\Desktop\\TinyTales\\TinyProject\\tiny-project\\src\\reportWebVitals.js",[],[],"C:\\Users\\Ayush\\Desktop\\TinyTales\\TinyProject\\tiny-project\\src\\SubmitButton.js",["24"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"./SubmitButton.css\";\r\n\r\nconst SubmitButton = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const [wordCount, setWordCount] = useState([]);\r\n\r\n  const handleClick = () => {\r\n    setClicked(true);\r\n    fetch(\"https://www.terriblytinytales.com/test.txt\")\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        setContent(data);\r\n        const words = data.toLowerCase().match(/\\b\\S+\\b/g);\r\n        const wordCountObj = {};\r\n        words.forEach((word) => {\r\n          wordCountObj[word] = (wordCountObj[word] || 0) + 1;\r\n        });\r\n        const wordCountArr = Object.keys(wordCountObj)\r\n          .map((key) => ({ word: key, count: wordCountObj[key] }))\r\n          .sort((a, b) => b.count - a.count)\r\n          .slice(0, 20);\r\n        setWordCount(wordCountArr);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleExport = () => {\r\n    const csvContent =\r\n      \"data:text/csv;charset=utf-8,\" +\r\n      wordCount.map((row) => `${row.word},${row.count}`).join(\"\\n\");\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"histogram-data.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {clicked ? (\r\n        <>\r\n          <div className=\"chart\">\r\n            <ResponsiveContainer width=\"100%\" height={500}>\r\n              <BarChart data={wordCount}>\r\n                <XAxis dataKey=\"word\" />\r\n                <YAxis />\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <Tooltip />\r\n                <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n          <div className=\"export\">\r\n            <button onClick={handleExport}>Export Data</button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"submit\">\r\n          <button onClick={handleClick}>Submit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n",{"ruleId":"25","severity":1,"message":"26","line":15,"column":10,"nodeType":"27","messageId":"28","endLine":15,"endColumn":17},"no-unused-vars","'content' is assigned a value but never used.","Identifier","unusedVar"]